/* drone original

ACTOR Drone 15067 {

	//$Category Decorate/Monsters
	//$Title "Security drone"
	Health 800
	Speed 12
	Radius 31
	Height 56
	PainChance 16
	Mass 600
	
	MONSTER
	+NOGRAVITY
	+NOBLOOD
	+DONTDRAIN
	+FLOAT
	+DONTTHRUST
	
	SeeSound "caco/sight"
	PainSound "caco/pain"
	DeathSound "caco/death"
	ActiveSound "caco/active"
	Obituary "%o was freezed by a v55 security drone."
	
	var int user_angle;
	var int user_count;
	var int user_countp;
	
	States
	{
	Spawn:
		DRON A 10 A_Look
		Loop
	See:
		DRON A 3 A_Chase 
		Loop 
	Missile:
		DRON BC 7 A_FaceTarget
		TNT1 A 0 A_SetUserVar("user_angle", 0)
		TNT1 A 0 A_SetUserVar("user_count", 0)
	Fire:
		TNT1 A 0 A_JumpIf(user_countp <= 0, "Single")
		TNT1 A 0 A_SetUserVar("user_angle", user_angle+2)
		TNT1 A 0 A_CustomMissile("ColdPlasmaBall", 10, 0, user_angle, 0, 0)
		TNT1 A 0 A_CustomMissile("ColdPlasmaBall", 10, 0, -user_angle, 0, 0)
		TNT1 A 0 A_SetUserVar("user_countp", user_countp-2)
	Loop
	Single:
		TNT1 A 0 A_CustomMissile("ColdPlasmaBall", 10, 0, 0, 0, 0)
		DRON BBBBB 4 bright A_FaceTarget
		TNT1 A 0 A_JumpIf (user_count > 30, "See")
		TNT1 A 0 A_Jump (192, "Increase")
		Goto See
	Increase:
		TNT1 A 0 A_SetUserVar("user_count", user_count+2)
		TNT1 A 0 A_SetUserVar("user_countp", user_count)
		TNT1 A 0 A_SetUserVar("user_angle", 0)
		Goto Fire
	Pain:
		DRON D 4 
		DRON D 4 A_Pain 
		DRON D 5 
		Goto See
	Death:
		DRON E 8 
		DRON F 8 A_Scream 
		DRON GH 8 
		DRON I 8 A_NoBlocking 
		DRON J -1 A_SetFloorClip
		Stop 
	Raise: 
		DRON J 8 A_UnsetFloorClip
		DRON IHGFE 8 
		Goto See 
	} 
}

*/

/* drone v2

ACTOR Drone 15067 {

	//$Category Decorate/Monsters
	//$Title "Security drone"
	Health 600
	Speed 18
	FloatSpeed 12
	VSpeed 3
	Radius 31
	Height 56
	PainChance 16
	Mass 300
	Scale 1.6
	
	MONSTER
	+NOGRAVITY
	+NOBLOOD
	+FLOAT
	//+DONTTHRUST
	+DONTDRAIN
	
	SeeSound "baby/sight"
	PainSound "Railbot/pain"
	DeathSound "Railbot/death"
	ActiveSound "baby/active"
	
	Obituary "%o was killed by a daemon drone."
	
	var int user_angle;
	var int user_count;
	
	States
	{
	Spawn:
		DR4N A 1 A_Look
		DR4N A 0 A_GiveInventory("Chase_Water",1)
		Loop
	See:
		DR4N A 1 A_GiveInventory("Chase_Water",1)
		Loop
	Missile:
		DR4N BC 7 A_FaceTarget
		TNT1 A 0 A_SetUserVar("user_angle", 0)
		TNT1 A 0 A_SetUserVar("user_count", random(5, 25))
	Fire:
		DR4N C 1
		TNT1 A 0 A_SetUserVar("user_angle", user_angle+1)
		TNT1 A 0 A_CustomMissile("ColdPlasmaBall", 10, 0, random(-user_angle, user_angle), CMF_OFFSETPITCH, random(-user_angle, user_angle))
		TNT1 A 0 A_SetUserVar("user_count", user_count-1)
		TNT1 A 0 A_JumpIf(user_count == 0, "See")
		Loop
	Pain:
		DR4N D 4 
		DR4N D 4 A_Pain
		DR4N D 5 
		Goto See
	Death:
		DR4N E 8 
		DR4N F 8 A_Scream 
		DR4N GH 8 
		DR4N I 8 A_NoBlocking 
		DR4N J -1 A_SetFloorClip
		Stop 
	Raise:
		DR4N J 8 A_UnsetFloorClip
		DR4N IHGFE 8 
		Goto See 
	} 
}
*/


ACTOR Drone {

	//$Category Decorate/Monsters
	//$Title "Security drone"
	Health 250
	Speed 25
	FloatSpeed 5
	// VSpeed 10
	Radius 31
	Height 56
	PainChance 48
	Mass 150
	Scale 1.0
	Species "drone"
	DamageFactor "Bio", 0.0
	
	MONSTER
	+NOGRAVITY
	+NOBLOOD
	+FLOAT
	//+DONTTHRUST
	+DONTGIB
	+DONTDRAIN
	+MISSILEMORE
	+MISSILEEVENMORE
	
	SeeSound "baby/sight"
	PainSound "Railbot/pain"
	// DeathSound "Railbot/death"
	ActiveSound "baby/active"
	
	Obituary "%o was killed by a daemon drone."
	
	var int user_count;
	
	States {
		
		Spawn:
			DR4N A 1 A_Look
			DR4N A 0 A_GiveInventory ("Enter_Water", 1)
			Loop
		See:
			DR4N A 1 A_GiveInventory ("Chase_Water", 1)
			Loop
		Melee:
		Missile:
			DR4N BB 4 A_FaceTarget
			DR4N C 6 A_FaceTarget
			TNT1 A 0 A_SetUserVar ("user_count", 3)
		Fire:
			DR4N C 0 A_PlaySound("Weapons/NailMGFire")
			TNT1 A 0 A_CustomMissile ("NailProj", 10, 0, random(-3, 3), CMF_OFFSETPITCH, random(-3, 3))
			TNT1 A 0 A_SetUserVar ("user_count", user_count-1)
			TNT1 A 0 A_JumpIf (user_count == 0, "See")
			Loop
		Pain:
			DR4N D 4 ThrustThing (angle*256/360+random(96,160), random(40,50), 1, 0)
			DR4N D 4 A_Pain
			DR4N D 5 
			Goto See
		Death:
			DR4N E 0 A_PlaySoundEx ("Sentry/Death", "SoundSlot5")
			DR4N E 0 A_PlaySoundEx ("weapons/rocklx", "SoundSlot6")
			DR4N E 6 
			DR4N F 6 A_Scream
			DR4N GH 6
			DR4N I 6 A_NoBlocking
			DR4N J -1 A_SetFloorClip
			Stop
	} 
}


/* cold plasma
Actor ColdPlasmaBall : PlasmaBall {

	Speed 25
	Damage 2
	// DamageType "Ice"
	Radius 9
	Height 6
	Scale 0.7
	RenderStyle Add
	Alpha 0.8
	Decal "PlasmaScorch"
	
	// BounceType Hexen
	// BounceCount 2
	
	States
	{
	Spawn:
	  PLCP AAAAAABBBBBB 1 Bright A_SpawnItemEx("CPBTrail", 0, 0, 0, 0, 0, 0, 0, 0)
	  Loop
	Death:
	  PLCX ABCDE 4 Bright
	  Stop
	}
}

Actor CPBTrail {
	
	Radius 9
	Height 6
	Scale 0.7
	RenderStyle Add
	Alpha 0.8
	
	+NOGRAVITY
	+NOBLOCKMAP
	// +RANDOMIZE
	
	States
	{
	Spawn:
	  PLCP AAAAAABBBBBB 1 Bright A_FadeOut
	  Loop
	}
}

*/

Actor ColdPlasmaBall : PlasmaBall {

	Speed 40
	Damage (random(1,2))
	// DamageType "Ice"
	Radius 3
	Height 6
	Scale 0.2
	
	RenderStyle Add
	Alpha 0.7
	
	Decal "PlasmaScorch"
	
	+RANDOMIZE
	
	// BounceType Hexen
	// BounceCount 2
	
	States {
		
		Spawn:
			FX16 AAABBBCCC 1 Bright NoDelay A_SpawnItemEx("CPBTrail", 0, 0, 0, 0, 0, 0, 0, 0)
			Loop
		Death:
			FX16 GHIJKL 1 Bright A_SetScale(scalex+0.01, scaley+0.01)
			Stop
	}
}

Actor CPBTrail {
	
	Radius 9
	Height 6
	Scale 0.2
	RenderStyle Add
	Alpha 0.8
	
	+NOGRAVITY
	+NOBLOCKMAP
	// +RANDOMIZE
	
	States {
		
		Spawn:
			FX16 AAABBBCCC 1 Bright A_FadeOut
			Loop
	}
}

Actor Enter_Water : CustomInventory {
	
	Inventory.Maxamount 0
	+INVENTORY.AUTOACTIVATE
	
	States {
		
		Spawn:
			TNT1 A 1
			Fail
		Use:
			TNT1 A 0 A_JumpIf (waterlevel < 3, "Waterlimit")
			TNT1 A 0 A_SetFloat
			TNT1 A 0 A_NoGravity
			Stop
		Waterlimit:
			TNT1 A 0 ThrustThingZ (0, 20, 1, 0) // Down
			TNT1 A 0 A_UnSetFloat
			TNT1 A 0 A_Gravity
			Stop
	}
}

Actor Chase_Water : CustomInventory {
	
	Inventory.Maxamount 0
	+INVENTORY.AUTOACTIVATE
	
	States {
		
		Spawn:
			TNT1 A 1
			Fail
		Use:
			TNT1 A 0 A_JumpIf (waterlevel < 3, "Waterlimit") // Half-submerged or less... -> Waterlimit
			// Totally submerged -> Chase
			TNT1 A 0 A_SetFloat
			TNT1 A 0 A_NoGravity
			TNT1 A 0 A_Chase
			Stop
		Waterlimit:
			TNT1 A 0 A_UnSetFloat
			TNT1 A 0 A_Gravity
			Stop
	}
}

/*
		Use:
			TNT1 A 0 A_JumpIf (waterlevel < 2, "Waterlimit") // If less than half-submerged... -> Waterlimit
			TNT1 A 0 A_JumpIf (waterlevel == 2, "Waterjet") // If partially submerged... -> Waterjet
			// Totally submerged -> Chase
			TNT1 A 0 A_Chase
			Stop
		Waterlimit:
			TNT1 A 0 ThrustThingZ (0, 10, 1, 0) // Down
			Stop
		Waterjet:
			TNT1 A 0 ThrustThingZ (0, 10, 1, 0) // Down
			TNT1 A 0 ThrustThing (angle*256/360+random(96,160), random(40,50), 1, 0) // Back
			Stop
*/
